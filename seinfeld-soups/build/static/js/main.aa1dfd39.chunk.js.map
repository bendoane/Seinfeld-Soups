{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddSoupForm.js","components/EditSoupForm.js","components/Login.js","base.js","components/Inventory.js","components/Order.js","sample-soups.js","components/Soup.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","AddSoupForm","nameRef","priceRef","statusRef","descRef","imageRef","createSoup","soup","name","price","parseFloat","status","desc","image","addSoup","currentTarget","reset","propType","PropTypes","func","EditSoupForm","handleChange","updatedSoup","Object","objectSpread","defineProperty","updateSoup","index","_this2","onChange","onClick","deleteSoup","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","console","log","signOut","onAuthStateChanged","_this3","keys","soups","map","key","components_EditSoupForm","components_AddSoupForm","loadSampleSoups","components_Login","Order","renderOrder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","removeFromOrder","orderIds","total","reduce","prevTotal","fishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Soup","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Soup","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.aa1dfd39.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"soup\",\n    \"marble-rye\",\n    \"Snickers-bar\",\n    \"diner\",\n    \"office\",\n    \"apartment\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component {\n  static propTypes = {\n    history: PropTypes.object\n  };\n\n  myInput = React.createRef();\n\n  goToStore = event => {\n    event.preventDefault();\n    const storeName = this.myInput.current.value;\n    this.props.history.push(`/store/${storeName}`);\n  };\n\n  render() {\n    return (\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\n        <h2>Please Enter A Store</h2>\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store →</button>\n      </form>\n    );\n  }\n}\n\nexport default StorePicker;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n  <header className=\"top\">\n    <h1>Soup Kitchen International</h1>\n    <h3 className=\"tagline\">\n      <span>{props.tagline}</span>\n    </h3>\n  </header>\n);\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddSoupForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  static propType = {\n    addSoup: PropTypes.func\n  };\n\n  createSoup = event => {\n    event.preventDefault();\n    const soup = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addSoup(soup);\n    event.currentTarget.reset();\n  };\n\n  render() {\n    return (\n      <div>\n        <h2>Add a Soup</h2>\n        <form className=\"fish-edit\" onSubmit={this.createSoup}>\n          <input\n            name=\"name\"\n            ref={this.nameRef}\n            type=\"text\"\n            placeholder=\"name \"\n          />\n          <input\n            name=\"price\"\n            ref={this.priceRef}\n            type=\"text\"\n            placeholder=\"price\"\n          />\n          <select name=\"status\" ref={this.statusRef}>\n            <option value=\"available\">Fresh Batch!</option>\n            <option value=\"unavailable\">All gone!</option>\n          </select>\n          <textarea name=\"desc\" ref={this.descRef} placeholder=\"desc\" />\n          <input\n            name=\"image\"\n            ref={this.imageRef}\n            type=\"text\"\n            placeholder=\"image\"\n          />\n          <button type=\"submit\">+ Add Soup</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddSoupForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditSoupForm extends React.Component {\n  static propTypes = {\n    soup: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    index: PropTypes.string,\n    updateSoup: PropTypes.func\n  };\n\n  handleChange = event => {\n    // update\n    // copy current\n    const updatedSoup = {\n      ...this.props.soup,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateSoup(this.props.index, updatedSoup);\n  };\n\n  render() {\n    return (\n      <div className=\"fish-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.soup.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.soup.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.soup.status}\n        >\n          <option value=\"available\">Fresh Batch!</option>\n          <option value=\"unavailable\">All gone!</option>\n        </select>\n        <textarea\n          type=\"text\"\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.soup.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.soup.image}\n        />\n        <button onClick={() => this.props.deleteSoup(this.props.index)}>\n          Remove Soup\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditSoupForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Kitchen Login</h2>\n    <p>Clock in to manage the kitchen's soup inventory</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Clock in with Github\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyCzXQyLyewJ-z1ILaG_AsbveG7Jr9L7kIw\",\n  authDomain: \"seinfeldsoups.firebaseapp.com\",\n  databaseURL: \"https://seinfeldsoups.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// Named export\nexport {firebaseApp};\nexport default base;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddSoupForm from \"./AddSoupForm\";\nimport EditSoupForm from \"./EditSoupForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\nclass Inventory extends React.Component {\n  static propTypes = {\n    soup: PropTypes.object,\n    updateSoup: PropTypes.func,\n    deleteSoup: PropTypes.func\n  };\n\n  state = {\n    uid: null,\n    owner: null\n  };\n\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.authHandler({ user });\n      }\n    });\n  }\n\n  authHandler = async authData => {\n    //Look up the current store\n    const store = await base.fetch(this.props.storeId, { context: this });\n    //Claim it if there is no owner\n    if (!store.owner) {\n      // save it as our own\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid\n      });\n    }\n    //Set to reflect the current user\n    this.setState({\n      uid: authData.user.uid,\n      owner: store.owner || authData.user.uid\n    });\n  };\n\n  authenticate = provider => {\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n  };\n\n  logout = async () => {\n    console.log(\"Logging out!\");\n    await firebase.auth().signOut();\n    this.setState({ uid: null });\n  };\n\n  render() {\n    const logout = <button onClick={this.logout}>Clock out!</button>;\n\n    // Check for login status\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate} />;\n    }\n    // check ownership\n    if (this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p> Good try, but this ain't your kitchen.</p>\n        </div>\n      );\n    }\n    // Must be owner, must be logged in.\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        {Object.keys(this.props.soups).map(key => (\n          <EditSoupForm\n            key={key}\n            index={key}\n            soup={this.props.soups[key]}\n            updateSoup={this.props.updateSoup}\n            deleteSoup={this.props.deleteSoup}\n          />\n        ))}\n        <AddSoupForm addSoup={this.props.addSoup} />\n        <button onClick={this.props.loadSampleSoups}>Load Basic Soups</button>\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  static propTypes = {\n    soups: PropTypes.object,\n    order: PropTypes.object,\n    removeFromOrder: PropTypes.func\n  };\n\n  renderOrder = key => {\n    const soup = this.props.soups[key];\n    const count = this.props.order[key];\n    const isAvailable = soup && soup.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n\n    if (!soup) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>No {soup ? soup.name : \"soup\"}!</li>;\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span> {count} </span>\n              </CSSTransition>\n            </TransitionGroup>\n            cups {soup.name}\n            {formatPrice(count * soup.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const soup = this.props.soups[key];\n      const count = this.props.order[key];\n      const isAvailable = soup && soup.status === \"available\";\n\n      if (isAvailable) {\n        return prevTotal + count * soup.price;\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n      <div className=\"order-wrap\">\n        <h2>Your Order</h2>\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}{\" \"}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong> {formatPrice(total)} </strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\nclass Soup extends React.Component {\n  static propTypes = {\n    details: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      desc: PropTypes.string,\n      status: PropTypes.string,\n      price: PropTypes.number\n    }),\n    addToOrder: PropTypes.func\n  };\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n\n    return (\n      <li className=\"menu-fish\">\n        <img src={image} alt={name} />\n        <h3 className=\"fish-name\">\n          {name}\n          <span className=\"fish-name\"> {formatPrice(price)} </span>\n        </h3>\n        <p className=\"desc\">{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"+ Place Order\" : \"No soup for you!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Soup;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\nimport Order from \"./Order\";\nimport sampleFishes from \"../sample-soups\";\nimport Soup from \"./Soup\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    soups: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  };\n\n  componentDidMount() {\n    const { params } = this.props.match;\n    // first reinstate our localStorage\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if (localStorageRef) {\n      this.setState({ order: JSON.parse(localStorageRef) });\n    }\n\n    this.ref = base.syncState(`${params.storeId}/soups`, {\n      context: this,\n      state: \"soups\"\n    });\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\n      this.props.match.params.storeId,\n      JSON.stringify(this.state.order)\n    );\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addSoup = soup => {\n    // copy state\n    const soups = { ...this.state.soups };\n    // add soup to the made copy\n    soups[`soup${Date.now()}`] = soup;\n    // set the state\n    this.setState({ soups });\n  };\n\n  updateSoup = (key, updatedSoup) => {\n    const soups = { ...this.state.soups };\n    soups[key] = updatedSoup;\n    this.setState({ soups });\n  };\n\n  deleteSoup = key => {\n    const soups = { ...this.state.soups };\n    soups[key] = null;\n    this.setState({ soups });\n  };\n\n  loadSampleSoups = () => {\n    this.setState({ soups: sampleFishes });\n  };\n\n  addToOrder = key => {\n    // copy state\n    const order = { ...this.state.order };\n    // Add to order or update\n    order[key] = order[key] + 1 || 1;\n    // set the order state\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    const order = { ...this.state.order };\n    delete order[key];\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"catch-of-the-day\">\n        <div className=\"menu\">\n          <Header tagline=\"New York's Finest\" />\n          <ul className=\"fishes\">\n            {Object.keys(this.state.soups).map(key => (\n              <Soup\n                key={key}\n                index={key}\n                details={this.state.soups[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n        <Order\n          soups={this.state.soups}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addSoup={this.addSoup}\n          updateSoup={this.updateSoup}\n          deleteSoup={this.deleteSoup}\n          loadSampleSoups={this.loadSampleSoups}\n          soups={this.state.soups}\n          storeId={this.props.match.params.storeId}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\n\nconst NotFound = () => (\n  <div>\n    <h2>Hm. I'm not sure what you were trying...</h2>\n    <p>But this is not what you need, my friend.</p>\n  </div>\n);\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={StorePicker} />\n      <Route path=\"/store/:storeId\" component={App} />\n      <Route component={NotFound} />\n    </Switch>\n  </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router.js';\n\nimport \"./css/style.css\";\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}